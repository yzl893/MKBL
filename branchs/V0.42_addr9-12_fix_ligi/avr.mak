# TASKING EDE (Windows based integrated Embedded Development Environment)
#
# This makefile has been generated by TASKING EDE
#
# Toolchain: TASKING C for C166/ST10 v6.0 r4
#

BINDIR  = c:\c166\bin
INCDIR  = c:\c166\include
LIBDIR  = c:\c166\lib

M166INC = c:\c166\include
export M166INC
CC166BIN = c:\c166\bin
export CC166BIN

PROJ    = avr
PROJDIR = c:\winavr\projects\flug\bl_mc_0_14
PRODDIR = c:\c166
OUTDIR  = 

OPT_CC  = -Ic:\c166\include  -xmifp -Ms -FFSC -Ot -OB -OE -zautobitastruct-4 -zautobita-0 -zswitch_tabmem_default -s -wstrict -g -zvolatile_union -A1 -O1
OPT_MPP = DEF(_CPU,167) DEF(_EXT,1)   DEF(__XPEN,0)     DEF(__WRCFG,0) DEF(__CLKEN,0) DEF(__BYTDIS,0) DEF(__ROMEN,0) DEF(__RDYEN0,0) DEF(__SGTDIS,0)   DEF(__STKSZ,0)                    DEF(__MCTC,1) DEF(__RWDC0,0) DEF(__MTTC0,0)  DEF(__ALECTL0,0) DEF(__BUSACT0,1)  DEF(__RDYEN0,0) DEF(__CSREN0,0) DEF(__CSWEN0,0)       DEF(__BUSACT1,0)             DEF(__BUSACT2,0)             DEF(__BUSACT3,0)             DEF(__BUSACT4,0)               DEF(EVA,1) DEF(EX_AB,0) DEF(FLOAT,1) DEF(BIT_INIT,0)   DEF(MODEL,SMALL) DEF(_USRSTACK,0) DEF(_SINGLE_FP,0) WA(1)
OPT_AS  = PL(60) PW(132) TA(8) WA(1) CHECKCPU16 CHECKBUS18 EX NOM166 SN(reg167.def)
OPT_LC  = _avr.ilo -cf -Ms -xmifp
OPT_XVW = --single_instance -tcfg sim167.cfg -i -a 100 -b 200 -c 32 -s 26

all : "$(PROJ).abs"

"uart.src" : "uart.c" "main.h" "twislave.h" "old_macros.h" "analog.h" "uart.h" "printf_p.h"
"uart.src" : "timer0.h" "ppm_decode.h"
	"c:\c166\bin\c166.exe" "uart.c" -f <<EOF 
  ${separate "\n" $(OPT_CC) }
  EOF

"uart.obj" : "uart.src"
	"c:\c166\bin\a166.exe" "uart.src" -f <<EOF 
  ${separate "\n" $(OPT_AS) }
  EOF

"analog.src" : "analog.c" "main.h" "twislave.h" "old_macros.h" "analog.h" "uart.h"
"analog.src" : "printf_p.h" "timer0.h" "ppm_decode.h"
	"c:\c166\bin\c166.exe" "analog.c" -f <<EOF 
  ${separate "\n" $(OPT_CC) }
  EOF

"analog.obj" : "analog.src"
	"c:\c166\bin\a166.exe" "analog.src" -f <<EOF 
  ${separate "\n" $(OPT_AS) }
  EOF

"interrupt4.src" : "interrupt4.c" "main.h" "twislave.h" "old_macros.h" "analog.h"
"interrupt4.src" : "uart.h" "printf_p.h" "timer0.h" "ppm_decode.h"
	"c:\c166\bin\c166.exe" "interrupt4.c" -f <<EOF 
  ${separate "\n" $(OPT_CC) }
  EOF

"interrupt4.obj" : "interrupt4.src"
	"c:\c166\bin\a166.exe" "interrupt4.src" -f <<EOF 
  ${separate "\n" $(OPT_AS) }
  EOF

"main.src" : "main.c" "main.h" "twislave.h" "old_macros.h" "analog.h" "uart.h" "printf_p.h"
"main.src" : "timer0.h" "ppm_decode.h"
	"c:\c166\bin\c166.exe" "main.c" -f <<EOF 
  ${separate "\n" $(OPT_CC) }
  EOF

"main.obj" : "main.src"
	"c:\c166\bin\a166.exe" "main.src" -f <<EOF 
  ${separate "\n" $(OPT_AS) }
  EOF

"ppm_decode.src" : "ppm_decode.c" "main.h" "twislave.h" "old_macros.h" "analog.h"
"ppm_decode.src" : "uart.h" "printf_p.h" "timer0.h" "ppm_decode.h"
	"c:\c166\bin\c166.exe" "ppm_decode.c" -f <<EOF 
  ${separate "\n" $(OPT_CC) }
  EOF

"ppm_decode.obj" : "ppm_decode.src"
	"c:\c166\bin\a166.exe" "ppm_decode.src" -f <<EOF 
  ${separate "\n" $(OPT_AS) }
  EOF

"printf_p.src" : "printf_p.c" "main.h" "twislave.h" "old_macros.h" "analog.h" "uart.h"
"printf_p.src" : "printf_p.h" "timer0.h" "ppm_decode.h"
	"c:\c166\bin\c166.exe" "printf_p.c" -f <<EOF 
  ${separate "\n" $(OPT_CC) }
  EOF

"printf_p.obj" : "printf_p.src"
	"c:\c166\bin\a166.exe" "printf_p.src" -f <<EOF 
  ${separate "\n" $(OPT_AS) }
  EOF

"timer0.src" : "timer0.c" "main.h" "twislave.h" "old_macros.h" "analog.h" "uart.h"
"timer0.src" : "printf_p.h" "timer0.h" "ppm_decode.h"
	"c:\c166\bin\c166.exe" "timer0.c" -f <<EOF 
  ${separate "\n" $(OPT_CC) }
  EOF

"timer0.obj" : "timer0.src"
	"c:\c166\bin\a166.exe" "timer0.src" -f <<EOF 
  ${separate "\n" $(OPT_AS) }
  EOF

"twislave.src" : "twislave.c" "main.h" "twislave.h" "old_macros.h" "analog.h" "uart.h"
"twislave.src" : "printf_p.h" "timer0.h" "ppm_decode.h"
	"c:\c166\bin\c166.exe" "twislave.c" -f <<EOF 
  ${separate "\n" $(OPT_CC) }
  EOF

"twislave.obj" : "twislave.src"
	"c:\c166\bin\a166.exe" "twislave.src" -f <<EOF 
  ${separate "\n" $(OPT_AS) }
  EOF

"$(PROJ).out" : "uart.obj" "analog.obj" "interrupt4.obj" "main.obj" "ppm_decode.obj"
"$(PROJ).out" : "printf_p.obj" "timer0.obj" "twislave.obj" "_avr.ilo"
	"c:\c166\bin\cc166.exe" -o $@ -f <<EOF 
  ${separate "\n" $(match .obj $!) $(match .lno $!) $(match .lib $!) $(OPT_LC)}
  EOF

"$(PROJ).abs" : "$(PROJ).out"
	"c:\c166\bin\ieee166.exe"  $! $@

# Copyright (c) 2001 Altium, Ltd.
# Serial:	979910-094
# EDE Version:	2.7 r5
